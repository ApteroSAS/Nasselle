---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import Image from '~/components/common/Image.astro';
import CallToAction from "./CallToAction.astro";

export interface CarouselItem {
  image: string;
  title: string;
  description: string;
}

interface CarouselProps {
  id?: string;
  items: CarouselItem[];
  interval?: number;
  isDark?: boolean;
  classes?: Record<string, string>;
}

const {
  id,
  items,
  interval = 3000,
  isDark = false,
  classes = {},
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl ${classes?.container ?? ''}`}>
  <style>
    .carousel-container {
      position: relative;
      width: 70%;
      overflow: hidden;
      margin: 0 auto;
    }
    .carousel-slide {
      display: flex;
      transition: transform 0.5s ease;
    }
    .carousel-slide figure {
      flex: none;
      width: 100%;
    }
    .carousel-image {
      width: 100%;
      object-fit: cover;
      border-radius: 15px;
    }
    .carousel-nav {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      padding: 1rem;
      cursor: pointer;
      background-color: rgba(255, 255, 255, 0.5);
      border-radius: 50%;
    }
    .carousel-nav.left {
      left: 50px; /* Adjusted to be outside the container */
    }
    .carousel-nav.right {
      right: 50px; /* Adjusted to be outside the container */
    }
  </style>

  <div class="carousel-container">
    <div class="carousel-slide">
      {items.map((item, index) => (
        <figure key={index}>
          <Image
            src={item.image}
            alt={item.title}
            class="carousel-image"
            width={500}
            height={200}
            sizes="(max-width: 1024px) 100vw, 100%"
            layout="responsive"
          />
          <figcaption>
            <Headline title={item.title} subtitle={item.description} classes={classes?.headline as Record<string, string>} />
          </figcaption>
        </figure>
      ))}
    </div>
  </div>
  <div class="carousel-nav left" onclick="prevSlide()">&#10094;</div>
  <div class="carousel-nav right" onclick="nextSlide()">&#10095;</div>

  <script>
    const carousel = document.querySelector('.carousel-slide');
    let currentIndex = 0;

    function showSlide(index) {
      const totalSlides = carousel.children.length;
      index = (index + totalSlides) % totalSlides;
      carousel.style.transform = `translateX(${-100 * index}%)`;
      currentIndex = index;
    }

    function nextSlide() {
      showSlide(currentIndex + 1);
    }

    function prevSlide() {
      showSlide(currentIndex - 1);
    }

    document.querySelector('.carousel-nav.left').addEventListener('click', prevSlide);
    document.querySelector('.carousel-nav.right').addEventListener('click', nextSlide);

    setInterval(nextSlide, interval);
  </script>
  <CallToAction
    actions={[
      {
        variant: 'primary',
        text: 'CasaOS Demo',
        href: 'http://demo.casaos.io/',
        target: '_blank',
        icon: 'tabler:device-desktop',
      },
      {
        variant: 'secondary',
        text: 'about CasaOS',
        href: 'https://casaos.io/',
        target: '_blank',
        icon: 'tabler:info-circle',
      }
    ]}
  >
    <Fragment slot="title">
      Try Casa OS
    </Fragment>
  </CallToAction>
</WidgetWrapper>
